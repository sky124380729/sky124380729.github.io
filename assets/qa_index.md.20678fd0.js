import{_ as s,o as a,c as n,a as l}from"./app.8e5e362f.js";const h=JSON.parse('{"title":"Q&A","description":"","frontmatter":{},"headers":[{"level":2,"title":"Windows Powershell禁止运行脚本","slug":"windows-powershell禁止运行脚本","link":"#windows-powershell禁止运行脚本","children":[]},{"level":2,"title":"Windows10下更换Git用户名或密码","slug":"windows10下更换git用户名或密码","link":"#windows10下更换git用户名或密码","children":[]},{"level":2,"title":"Windows下安装nvm，使用nvm use切换不成功问题解决","slug":"windows下安装nvm-使用nvm-use切换不成功问题解决","link":"#windows下安装nvm-使用nvm-use切换不成功问题解决","children":[]},{"level":2,"title":"nvm切换node version之后 npm全局包不能共用","slug":"nvm切换node-version之后-npm全局包不能共用","link":"#nvm切换node-version之后-npm全局包不能共用","children":[]},{"level":2,"title":"Windows11终端，执行npm install package时报错","slug":"windows11终端-执行npm-install-package时报错","link":"#windows11终端-执行npm-install-package时报错","children":[]},{"level":2,"title":"npm和yarn镜像","slug":"npm和yarn镜像","link":"#npm和yarn镜像","children":[]},{"level":2,"title":"ssh免密登录配置","slug":"ssh免密登录配置","link":"#ssh免密登录配置","children":[]},{"level":2,"title":"Less如何引入全局样式","slug":"less如何引入全局样式","link":"#less如何引入全局样式","children":[]},{"level":2,"title":"Uncaught TypeError: Illegal invocation?","slug":"uncaught-typeerror-illegal-invocation","link":"#uncaught-typeerror-illegal-invocation","children":[]},{"level":2,"title":"插件模式下无法访问$route","slug":"插件模式下无法访问-route","link":"#插件模式下无法访问-route","children":[]},{"level":2,"title":"路由配置的技巧","slug":"路由配置的技巧","link":"#路由配置的技巧","children":[]},{"level":2,"title":"vue-router hash和history的区别","slug":"vue-router-hash和history的区别","link":"#vue-router-hash和history的区别","children":[]},{"level":2,"title":"nginx常用命令","slug":"nginx常用命令","link":"#nginx常用命令","children":[]},{"level":2,"title":"跨域的解决方式","slug":"跨域的解决方式","link":"#跨域的解决方式","children":[]},{"level":2,"title":"npm发布流程","slug":"npm发布流程","link":"#npm发布流程","children":[]},{"level":2,"title":"如何调试源码","slug":"如何调试源码","link":"#如何调试源码","children":[]},{"level":2,"title":"axios取消请求的使用场景","slug":"axios取消请求的使用场景","link":"#axios取消请求的使用场景","children":[]},{"level":2,"title":"使用swiper字体模糊","slug":"使用swiper字体模糊","link":"#使用swiper字体模糊","children":[]},{"level":2,"title":"关于dpr","slug":"关于dpr","link":"#关于dpr","children":[]},{"level":2,"title":"element-ui default-expanded-keys 变化时候树不重新渲染","slug":"element-ui-default-expanded-keys-变化时候树不重新渲染","link":"#element-ui-default-expanded-keys-变化时候树不重新渲染","children":[]},{"level":2,"title":"el-tree的checkbox半选回显","slug":"el-tree的checkbox半选回显","link":"#el-tree的checkbox半选回显","children":[]},{"level":2,"title":"使用dart-sass(即sass)替代node-sass之后，/deep/选择器不生效","slug":"使用dart-sass-即sass-替代node-sass之后-deep-选择器不生效","link":"#使用dart-sass-即sass-替代node-sass之后-deep-选择器不生效","children":[]},{"level":2,"title":"关于peerDependencies","slug":"关于peerdependencies","link":"#关于peerdependencies","children":[]},{"level":2,"title":"为什么不用undefined而使用void 0","slug":"为什么不用undefined而使用void-0","link":"#为什么不用undefined而使用void-0","children":[]},{"level":2,"title":"node-sass安装失败","slug":"node-sass安装失败","link":"#node-sass安装失败","children":[]},{"level":2,"title":"npx是什么","slug":"npx是什么","link":"#npx是什么","children":[]},{"level":2,"title":"自己写的npm包怎么在发布前在项目中引入","slug":"自己写的npm包怎么在发布前在项目中引入","link":"#自己写的npm包怎么在发布前在项目中引入","children":[]}],"relativePath":"qa/index.md","lastUpdated":1677771756000}'),e={name:"qa/index.md"},p=l(`<h1 id="q-a" tabindex="-1">Q&amp;A <a class="header-anchor" href="#q-a" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#windows-powershell禁止运行脚本">Windows Powershell禁止运行脚本</a></li><li><a href="#windows10下更换git用户名或密码">Windows10下更换Git用户名或密码</a></li><li><a href="#windows下安装nvm-使用nvm-use切换不成功问题解决">Windows下安装nvm，使用nvm use切换不成功问题解决</a></li><li><a href="#nvm切换node-version之后-npm全局包不能共用">nvm切换node version之后 npm全局包不能共用</a></li><li><a href="#windows11终端-执行npm-install-package时报错">Windows11终端，执行npm install package时报错</a></li><li><a href="#npm和yarn镜像">npm和yarn镜像</a></li><li><a href="#ssh免密登录配置">ssh免密登录配置</a></li><li><a href="#less如何引入全局样式">Less如何引入全局样式</a></li><li><a href="#uncaught-typeerror-illegal-invocation">Uncaught TypeError: Illegal invocation?</a></li><li><a href="#插件模式下无法访问-route">插件模式下无法访问$route</a></li><li><a href="#路由配置的技巧">路由配置的技巧</a></li><li><a href="#vue-router-hash和history的区别">vue-router hash和history的区别</a></li><li><a href="#nginx常用命令">nginx常用命令</a></li><li><a href="#跨域的解决方式">跨域的解决方式</a></li><li><a href="#npm发布流程">npm发布流程</a></li><li><a href="#如何调试源码">如何调试源码</a></li><li><a href="#axios取消请求的使用场景">axios取消请求的使用场景</a></li><li><a href="#使用swiper字体模糊">使用swiper字体模糊</a></li><li><a href="#关于dpr">关于dpr</a></li><li><a href="#element-ui-default-expanded-keys-变化时候树不重新渲染">element-ui default-expanded-keys 变化时候树不重新渲染</a></li><li><a href="#el-tree的checkbox半选回显">el-tree的checkbox半选回显</a></li><li><a href="#使用dart-sass-即sass-替代node-sass之后-deep-选择器不生效">使用dart-sass(即sass)替代node-sass之后，/deep/选择器不生效</a></li><li><a href="#关于peerdependencies">关于peerDependencies</a></li><li><a href="#为什么不用undefined而使用void-0">为什么不用undefined而使用void 0</a></li><li><a href="#node-sass安装失败">node-sass安装失败</a></li><li><a href="#npx是什么">npx是什么</a></li><li><a href="#自己写的npm包怎么在发布前在项目中引入">自己写的npm包怎么在发布前在项目中引入</a></li></ul></nav><h2 id="windows-powershell禁止运行脚本" tabindex="-1">Windows Powershell禁止运行脚本 <a class="header-anchor" href="#windows-powershell禁止运行脚本" aria-hidden="true">#</a></h2><blockquote><p>普通模式下</p></blockquote><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Start-Process</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">powershell</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-Verb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">runAs</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#FFCB6B;">-ExecutionPolicy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RemoteSigned</span></span>
<span class="line"><span style="color:#FFCB6B;">Y</span></span>
<span class="line"></span></code></pre></div><blockquote><p>管理员模式下</p></blockquote><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#FFCB6B;">-ExecutionPolicy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RemoteSigned</span></span>
<span class="line"><span style="color:#FFCB6B;">Y</span></span>
<span class="line"></span></code></pre></div><h2 id="windows10下更换git用户名或密码" tabindex="-1">Windows10下更换Git用户名或密码 <a class="header-anchor" href="#windows10下更换git用户名或密码" aria-hidden="true">#</a></h2><ul><li>打开<code>控制面板</code></li><li>找到<code>用户账户</code></li><li>找到<code>管理windows凭据</code></li></ul><h2 id="windows下安装nvm-使用nvm-use切换不成功问题解决" tabindex="-1">Windows下安装nvm，使用<code>nvm use</code>切换不成功问题解决 <a class="header-anchor" href="#windows下安装nvm-使用nvm-use切换不成功问题解决" aria-hidden="true">#</a></h2><p>nodejs 目录换一个就好</p><h2 id="nvm切换node-version之后-npm全局包不能共用" tabindex="-1">nvm切换node version之后 npm全局包不能共用 <a class="header-anchor" href="#nvm切换node-version之后-npm全局包不能共用" aria-hidden="true">#</a></h2><p>可以试一下将npm缓存和安装包的路径挂载到原有的缓存和全局安装包路径上</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prefix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.....</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">原安装包路径</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cache</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">....</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">原缓存路径</span></span>
<span class="line"></span></code></pre></div><p>对于版本问题，可以使用<a href="https://libraries.io/npm/npm-check-updates" target="_blank" rel="noreferrer">npm-check-updates</a>工具进行管理：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装npm-check-updates</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm-check-updates</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 更新所有全局包</span></span>
<span class="line"><span style="color:#FFCB6B;">ncu</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span></span>
<span class="line"></span></code></pre></div><h2 id="windows11终端-执行npm-install-package时报错" tabindex="-1">Windows11终端，执行npm install package时报错 <a class="header-anchor" href="#windows11终端-执行npm-install-package时报错" aria-hidden="true">#</a></h2><ul><li>问题产生：不识别Linux格式的相对路径，如：../pathname。</li><li>问题解决：降低Node版本至16.13.2。该版本以上至最新18.4.0版本在执行包的安装时都会报上述错误。</li></ul><h2 id="npm和yarn镜像" tabindex="-1">npm和yarn镜像 <a class="header-anchor" href="#npm和yarn镜像" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npmmirror.com</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># yarn</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npmmirror.com</span></span>
<span class="line"></span></code></pre></div><h2 id="ssh免密登录配置" tabindex="-1">ssh免密登录配置 <a class="header-anchor" href="#ssh免密登录配置" aria-hidden="true">#</a></h2><ul><li>使用PuTTYgen Generate生成公钥和私钥，注意生成的时候鼠标要移动</li><li>将生成的公钥拷贝到记事本中，并打开服务器</li><li>~/.ssh目录下的authorized_keys,如果没有该文件则创建</li><li>putty 登录到服务器</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 修改权限</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">700</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/root/.ssh</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 切换到.ssh目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 装了vim的话可以使用vim,没有的话使用vi</span></span>
<span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authorized_keys</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 复制刚才在记事本粘贴的公钥，在这里使用鼠标右键粘贴</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 按下esc</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输入:wp</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 回车</span></span>
<span class="line"></span></code></pre></div><ul><li>PuTTYgen Conversions菜单导出私钥，到某个目录下面，此处命名为id_rsa</li><li>公钥也保存一份到该目录下（刚才记事本的内容），命名为id_rsa.pub</li><li>scp免密将本地文件拷贝到服务器</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">scp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-P</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">服务器端口号</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">私钥的位置</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">用户名@服务器IP:服务器项目地址</span></span>
<span class="line"></span></code></pre></div><h2 id="less如何引入全局样式" tabindex="-1">Less如何引入全局样式 <a class="header-anchor" href="#less如何引入全局样式" aria-hidden="true">#</a></h2><blockquote><p>Used for global import to avoid the need to import each style file separately reference: Avoid repeated reference</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">hack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">modifyVars</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hack</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> @import (reference) &quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/design/config.less</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&quot;;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span></code></pre></div><h2 id="uncaught-typeerror-illegal-invocation" tabindex="-1">Uncaught TypeError: Illegal invocation? <a class="header-anchor" href="#uncaught-typeerror-illegal-invocation" aria-hidden="true">#</a></h2><p>这种错误一般都是调用浏览器内部函数的时候<code>this</code>指向不对的问题导致的</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> defaultValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">proxy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Proxy</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">) </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaultValue</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">defaultValue</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="插件模式下无法访问-route" tabindex="-1">插件模式下无法访问$route <a class="header-anchor" href="#插件模式下无法访问-route" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vue示例下</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentRoute</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="路由配置的技巧" tabindex="-1">路由配置的技巧 <a class="header-anchor" href="#路由配置的技巧" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">component</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Layout</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">children</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#F07178;">      path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 注意这里</span></span>
<span class="line"><span style="color:#F07178;">      component</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Index</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">detail</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">detail/:id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      props</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      component</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Detail</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="vue-router-hash和history的区别" tabindex="-1">vue-router hash和history的区别 <a class="header-anchor" href="#vue-router-hash和history的区别" aria-hidden="true">#</a></h2><ul><li><p>Hash模式是基于锚点，以及onhaschange事件</p></li><li><p>History模式是基于HTML5中的History API</p><ul><li>history.pushState() IE10以后才支持</li><li>history.replaceState()</li></ul></li></ul><h2 id="nginx常用命令" tabindex="-1">nginx常用命令 <a class="header-anchor" href="#nginx常用命令" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 启动</span></span>
<span class="line"><span style="color:#FFCB6B;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重启</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 停止</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span></span>
<span class="line"></span></code></pre></div><h2 id="跨域的解决方式" tabindex="-1">跨域的解决方式 <a class="header-anchor" href="#跨域的解决方式" aria-hidden="true">#</a></h2><ul><li>webpack-dev-serve 的 proxy 进行代理</li><li>后台开启 cors （不需要前端做任何改动）</li><li>使用 nginx 转发请求</li></ul><h2 id="npm发布流程" tabindex="-1">npm发布流程 <a class="header-anchor" href="#npm发布流程" aria-hidden="true">#</a></h2><ul><li><p>注册npm账号</p></li><li><p>登录npm账号</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 登录</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 检查当前登录状态</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">whoami</span></span>
<span class="line"></span></code></pre></div></li><li><p>修改版本号</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># patch</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">patch</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># minor</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">minor</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># major</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">major</span></span>
<span class="line"></span></code></pre></div></li><li><p>发布/取消发布</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 发布</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 取消发布</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unpublish</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="如何调试源码" tabindex="-1">如何调试源码 <a class="header-anchor" href="#如何调试源码" aria-hidden="true">#</a></h2><ul><li>找到package.json import导入的就是module字段的文件，require导入的就是main字段的文件，没有module的话就是main</li><li>找到对应源码的位置打印或者debugger</li><li>重启dev</li></ul><h2 id="axios取消请求的使用场景" tabindex="-1">axios取消请求的使用场景 <a class="header-anchor" href="#axios取消请求的使用场景" aria-hidden="true">#</a></h2><ul><li>当在输入框输入值需要发送请求的时候，我们一般用<code>debounce</code>在前端做延迟防止连续发送</li><li>但是有一种情况，就是用户输入的比较慢，同时发送了很多请求，但是接口返回又比较慢，存在先发送的请求后返回的情况，这个时候后请求的数据可能被先请求的数据的返回结果覆盖了，这个时候我们就需要用到取消请求。一旦有新的请求发送，就取消之前已经发送出去的请求</li></ul><h2 id="使用swiper字体模糊" tabindex="-1">使用swiper字体模糊 <a class="header-anchor" href="#使用swiper字体模糊" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> swiper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Swiper</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.swiper-container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">roundLengths </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//防止文字模糊</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="关于dpr" tabindex="-1">关于dpr <a class="header-anchor" href="#关于dpr" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 屏幕物理像素   /   逻辑像素</span></span>
<span class="line"><span style="color:#A6ACCD;">screen</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">with </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientWidth </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> devicePixelRatio</span></span>
<span class="line"></span></code></pre></div><h2 id="element-ui-default-expanded-keys-变化时候树不重新渲染" tabindex="-1">element-ui <code>default-expanded-keys</code> 变化时候树不重新渲染 <a class="header-anchor" href="#element-ui-default-expanded-keys-变化时候树不重新渲染" aria-hidden="true">#</a></h2><p>用一个参数控制该树组件的渲染，先置为false把树组件销毁掉，然后设置其default-expanded-keys，接着在this.$nextTick中把参数改回true重新渲染即可</p><h2 id="el-tree的checkbox半选回显" tabindex="-1">el-tree的checkbox半选回显 <a class="header-anchor" href="#el-tree的checkbox半选回显" aria-hidden="true">#</a></h2><p>el-tree的checkbox半选回显一直是一个非常头疼的问题，如果父子节点是关联的(即check-strictly)，回显的时候==setCheckedKeys==一定要把所有的父节点的id给干掉，有三种方式：</p><ul><li><p>假如后台是树处理后的列表，需要后台标识一下是不是叶子节点</p></li><li><p>假如后台给的就是过滤后的树，前端则需要把这棵树所有叶子节点递归出来</p></li><li><p>vue-element-admin的方法控制check-Sticky</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">checkStrictly </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">role </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deepClone</span><span style="color:#A6ACCD;">(scope</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">row)</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$nextTick</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">generateRoutes</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">role</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tree</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCheckedNodes</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">generateArr</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// set checked state of a node not affects its father and child nodes</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">checkStrictly</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="使用dart-sass-即sass-替代node-sass之后-deep-选择器不生效" tabindex="-1">使用dart-sass(即sass)替代node-sass之后，/deep/选择器不生效 <a class="header-anchor" href="#使用dart-sass-即sass-替代node-sass之后-deep-选择器不生效" aria-hidden="true">#</a></h2><p>如果你希望 scoped 样式中的一个选择器能够作用得“更深”，例如影响子组件，你可以使用 &gt;&gt;&gt; 操作符：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> &gt;&gt;&gt; </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>上述代码将会编译成：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">data-v-f3f3eg9</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>有些像 Sass 之类的预处理器无法正确解析 &gt;&gt;&gt;。这种情况下你可以使用 /deep/ 或 ::v-deep 操作符取而代之——两者都是 &gt;&gt;&gt; 的别名，同样可以正常工作。</p></div><h2 id="关于peerdependencies" tabindex="-1">关于peerDependencies <a class="header-anchor" href="#关于peerdependencies" aria-hidden="true">#</a></h2><ul><li>peerDependencies 表明当前包需要安装的依赖，没有这里面的包那么这个包不起作用，这样npm i 这个包的时候，peerDependencies的内容不会被自动安装，会输出warning日志，提示你需要在你项目里面自己安装这两个依赖， 那在开发包的时候没有了这个依赖不能跑了怎么办，把他们从dependencies移动到devDependencies即可</li><li><a href="https://xwenliang.cn/p/5af2a97d5a8a996548000003" target="_blank" rel="noreferrer">对peerDependencies的理解</a></li><li><a href="https://www.cnblogs.com/wonyun/p/9692476.html" target="_blank" rel="noreferrer">探讨npm依赖管理之peerDependencies</a></li></ul><h2 id="为什么不用undefined而使用void-0" tabindex="-1">为什么不用undefined而使用void 0 <a class="header-anchor" href="#为什么不用undefined而使用void-0" aria-hidden="true">#</a></h2><p>局部作用域中<code>undefined</code>会被重写，为了不被重写并减少字节(很多压缩工具的做法),会把<code>undefined</code>改为<code>void 0</code>，因为<code>void</code>进行求值返回的都是<code>undefined</code></p><h2 id="node-sass安装失败" tabindex="-1">node-sass安装失败 <a class="header-anchor" href="#node-sass安装失败" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">uninstall</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-sass</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-sass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span></span>
<span class="line"></span></code></pre></div><h2 id="npx是什么" tabindex="-1">npx是什么 <a class="header-anchor" href="#npx是什么" aria-hidden="true">#</a></h2><ul><li>像vue-cli , create-react-app 之类的脚手架工具，一般只需要安装一次，如果装在全局造成资源浪费。所以，可以使用<code>npx create-react-app my-app</code>命令来执行</li><li>还可以调用项目内部的模块，之前执行模块需要<code>node_modules/.bin/mocha --version</code>或者加到package.json的scripts里面，npx的话<code>npx mocha --version</code>就可以了</li></ul><h2 id="自己写的npm包怎么在发布前在项目中引入" tabindex="-1">自己写的npm包怎么在发布前在项目中引入 <a class="header-anchor" href="#自己写的npm包怎么在发布前在项目中引入" aria-hidden="true">#</a></h2><ul><li>假如包名叫做<code>levi-element</code></li><li>首先在包的项目中输入<code>npm link</code></li><li>然后在应用中输入<code>npm link levi-element</code>好像是相对路径</li><li>然后在应用中的<code>package.json</code>依赖中加入<code>levi-element</code>,版本号随便写，为了方便测试的时候<code>import</code>得到</li></ul>`,72),o=[p];function t(c,r,i,y,d,D){return a(),n("div",null,o)}const F=s(e,[["render",t]]);export{h as __pageData,F as default};
