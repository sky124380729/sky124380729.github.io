import{_ as e,o,c as s,a as c}from"./app.8e5e362f.js";const a="/assets/CLI.4bad8958.png",l="/assets/CLI2.40527645.jpg",C=JSON.parse('{"title":"关于CLI","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/cli.md","lastUpdated":1677771756000}'),d={name:"advanced/cli.md"},n=c('<h1 id="关于cli" tabindex="-1">关于CLI <a class="header-anchor" href="#关于cli" aria-hidden="true">#</a></h1><ul><li><p>shell、bash、cli关系图</p><p><img src="'+a+'" alt="image"></p></li><li><p>直接执行<code>vue create vue-test-app</code>的原理</p><p><img src="'+l+`" alt="image"></p><ul><li>在终端输入 <code>vue create vue-test-app</code></li><li>终端解析出<code>vue</code>命令</li><li>终端在环境变量中找到<code>vue</code>命令</li><li>终端根据<code>vue</code>命令链接到实际文件<code>vue.js</code></li><li>终端利用<code>node</code>执行<code>vue.js</code></li><li><code>vue.js</code>解析<code>command/options</code></li><li><code>vue.js</code>执行<code>command</code></li><li>执行完毕，退出执行</li></ul></li><li><p>为什么<code>vue</code>命令可以直接执行<code>vue.js</code>文件，而不是使用<code>node vue.js</code></p><p>原因就是以下的第一行，告诉操作系统在环境变量中找<code>node</code>命令，操作系统通过<code>node</code>命令去执行文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div></li><li><p>脚手架的本质就是客户端，这里讲的客户端并不是指的我们编写的代码本身是客户端，而是<code>node</code>是客户端</p></li><li><p>软连接是可以嵌套的，因此比如不想使用<code>vue</code>命令，可以再创建一个<code>vue2</code>软连接指向<code>vue</code></p></li></ul>`,2),i=[n];function t(p,r,u,_,v,m){return o(),s("div",null,i)}const g=e(d,[["render",t]]);export{C as __pageData,g as default};
