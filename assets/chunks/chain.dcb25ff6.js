var r=Object.defineProperty;var o=(l,s,t)=>s in l?r(l,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[s]=t;var e=(l,s,t)=>(o(l,typeof s!="symbol"?s+"":s,t),t);const i="pending",a="fulfilled",h="rejected";class n{constructor(s){e(this,"status",i);e(this,"value");e(this,"reason");e(this,"successCallback",[]);e(this,"failCallback",[]);e(this,"resolve",s=>{if(this.status===i)for(this.status=a,this.value=s;this.successCallback.length;)this.successCallback.shift()(this.value)});e(this,"reject",s=>{if(this.status===i)for(this.status=h,this.reason=s;this.failCallback.length;)this.failCallback.shift()(this.value)});s(this.resolve,this.reject)}then(s,t){return new n(u=>{if(this.status===a){let c=s(this.value);u(c)}else this.status===h?t(this.reason):(this.successCallback.push(s),this.failCallback.push(t))})}}function p(l){new l(t=>{t("成功")}).then(t=>(console.log(t),100)).then(t=>{console.log(t)})}export{n as default,p as testCase};
