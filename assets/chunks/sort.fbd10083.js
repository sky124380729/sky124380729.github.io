function c(t){for(let n=0;n<t.length-1;n++)for(let e=0;e<t.length-1-n;e++)t[e+1]<t[e]&&([t[e+1],t[e]]=[t[e],t[e+1]]);return t}function u(t){for(let n=0;n<t.length-1;n++){let e=n;for(let i=n+1;i<t.length;i++)t[i]<t[e]&&(e=i);[t[e],t[n]]=[t[n],t[e]]}return t}function g(t){for(let n=1;n<t.length;n++){const e=t[n];let i=n;for(;i--&&t[i-1]>e;)t[i]=t[i-1];t[i]=e}return t}function p(t){const n=e=>{if(e.length===1)return e;const i=e.length>>1,h=e.slice(0,i),s=e.slice(i,e.length),l=n(h),o=n(s),f=[];for(;l.length||o.length;)l.length&&o.length?f.push(l[0]<o[0]?l.shift():o.shift()):l.length?f.push(l.shift()):o.length&&f.push(o.shift());return f};return n(t)}function d(t){const n=e=>{if(e.length<=1)return e;const i=[],h=[],s=e[0];for(let l=1;l<e.length;l++)e[l]<s?i.push(e[l]):h.push(e[l]);return[...n(i),s,...n(h)]};return n(t)}export{c as bubbleSort,g as insertSort,p as mergeSort,d as quickSort,u as selectionSort};
